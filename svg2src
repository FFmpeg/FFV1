#!/bin/bash
# this script reads an RFC xml document and when an artwork node references a sidecar .svg file in the @src attribute, then this script replaces the file reference with the url-encoded image data of that file (as permitted by https://tools.ietf.org/html/rfc7991#section-2.5) and also adds in corresponding ascii-art noted in ffv1.md
RFC_XML="${1}"
xmlstarlet select --template --match "//artwork[@type='svg'][substring(@src,string-length(@src)-3)='.svg']" --value-of @src --nl "${RFC_XML}" | while read ARTWORK_SVG ; do
  ENCODED_SVG="$(echo $(cat "$ARTWORK_SVG") | sed 's/ /%20/g;s/"/%22/g;s/#/%23/g;s/(/%28/g;s/)/%29/g;s/,/%2C/g;s/:/%3A/g;s/</%3C/g;s/=/%3D/g;s/>/%3E/g;s/?/%3F/g')"
  # find an <artwork> node for the SVG data and insert an <artset> node after it
  xmlstarlet edit --inplace --subnode "//figure[artwork/@src='${ARTWORK_SVG}']" --type elem -n artset "${RFC_XML}"
  # rename ascii-art sourcecode elements to ascii-art artwork elements 
  xmlstarlet edit --inplace --rename "//sourcecode[@type='ascii-art']" -v "artwork" "${RFC_XML}"
  # move the found <artwork> nodes into the newly made <artset> node
  xmlstarlet edit --inplace --move  "//figure[artset[not(artwork)]]/artwork" "//artset[not(artwork)][1]" "${RFC_XML}"
  # update the @src attribute of the artwork for the SVG data to contain the encoded SVG XML
  xmlstarlet edit --inplace --update "//artwork[@src='${ARTWORK_SVG}']/@src" --value "data:image/svg+xml,${ENCODED_SVG}" "${RFC_XML}"
done
