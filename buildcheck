#!/bin/sh
#
# script to check the tools needed to build the specs within a UNIX shell

MMARK_VERSION=2.2.8
XML2RFC_VERSION=2.46.0
XMLSTARLET_VERSION=1.6.1
PDFCROP_VERSION=1.38
PDF2SVG_VERSION=0.2.3

check_version() {
    gotver=$2
    gotmajor=`echo $gotver|cut -d. -f1`
    gotminor=`echo $gotver|cut -d. -f2|cut -d+ -f1`
    gotmicro=`echo $gotver|cut -d. -f3|cut -d+ -f1`
    [ -z "$gotmicro" ] && gotmicro=0
    needmajor=`echo $3|cut -d. -f1`
    needminor=`echo $3|cut -d. -f2`
    needmicro=`echo $3|cut -d. -f3`
    [ -z "$needmicro" ] && needmicro=0
    if [ "$needmajor" -ne "$gotmajor" \
         -o "$needmajor" -eq "$gotmajor" -a "$needminor" -gt "$gotminor" \
         -o "$needmajor" -eq "$gotmajor" -a "$needminor" -eq "$gotminor" -a "$needmicro" -gt "$gotmicro" ]
    then
        echo "$1 too old (got $gotver, needed $3)"
        NEEDED="$NEEDED $1"
    else
        FOUND="$FOUND $(command -v $1)"
        echo "found $1 version $2 (needed $3)"
    fi
}

check() {
    if ! $1 --version >/dev/null 2>&1 && ! $1 -version >/dev/null 2>&1
    then
        echo "$1 not found"
        NEEDED="$NEEDED $1"
    else
        # found, need to check version ?
        if [ -z "$2" ];then
            FOUND="$FOUND $(command -v $1)"
            echo "found $1"
        else
            gotver=`$1 --version | head -1 | sed s/'.* '//\;s/^v//`
            check_version $1 $gotver $2
        fi
    fi
}

# check make
check mmark $MMARK_VERSION
check xml2rfc $XML2RFC_VERSION
check xmlstarlet $XMLSTARLET_VERSION
check pdfcrop $PDFCROP_VERSION
#check pdf2svg $PDF2SVG_VERSION

for t in $NEEDED; do
    PACKAGES="$PACKAGES $t"
done

[ -n "$PACKAGES" ] && echo "Out of date or missing packages: $PACKAGES"
